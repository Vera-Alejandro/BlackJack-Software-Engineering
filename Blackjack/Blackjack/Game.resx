<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAcFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFuNJ
        REFUeNrtXXmAjVX//4x93zO27PuWJbsISV56KxFviLLWVApR9qUQ4hc/hJShDCFbiyW8RERUsi/ZM4zE
        WGfGzLxnNnNn5t7vPc9yznnm3vP5/jlzn+dszznf890+gIaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaG
        hoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhiRkQjE0RXcMxmiMxJt4HrWQz/JT
        8+IRdMAbGMGeOpg9vQl7SyY92M5CQTRkUxSCwwhHNGITJRJh+AkT0AhZTT01C3vqB9iJK+xJSc+MZm84
        gqXsbQ1RCAF66NUiF6rjJczBL/jnwRSllb+xhO0MxiYrAI3xBa4ST72O/ZjH3l6TtUJDMrKiNJ7BRGxF
        qMsXT8kVjGP7BP+OMgaXuZ4bzf7vv5jMWlPW5D6jYQAZUQQtMBRrcAoRXBOULDFYi4pcb6nAnh9j8OkR
        OM2ePwwtUZS1UsN25MOj6I/FOIhbBqfGVX5CNa9vqsZOffNvuIVD+BJBqIf8etLsQA5UwYuYiZ/ZSR5r
        g2xGYfJ9pdiGbsd7/sYeppt0Z8spp55EM8iMkmiLsdiEi7hvy5QkyCF2iaOWW7CN74plLb+ELewm0Z4t
        rCx6Uvm074eYxj4QK3ASd22djASZTb69j2HNgk/usd6swhA0RyAy6En2ZHCpjd74DL/hhpBJiJMovEBu
        /weFvTlBbuIAFqIf6tpgoPIZZGO6+QuYzlSvMMO6t1E5T94Dhgh+u6uGsBsfozMqI7s/G26LozVG4js2
        LVGSBv57YsALYa+0BZC0H13EBozBU3iY6Tx+dMoXRCO8iaU4ituSh3w00a420luTJHdwHMuZ3tOU6T8+
        bVzOjZroiXnYh+uKBroN0boPFE1/stzAr/gUvVALeXzNcFsWHTAF23CZ03ArRo6hhMc25sRm5QsgyWIZ
        hh2Yhk4oz/SjdG64LYqWeA9rcdrFn6ZOlhFu3Kr4yyELINmXeRbfYgTTk4qnP/dzftTHa/gChywZbu2W
        AUSLu9pqbrJTbuMIQpjO1JDpTo7XEHKiGrphNvbgmuMG8joaEy2f5dDpT5Z/mO40Fz1Qg+lSjkMWlMLT
        mIgtuOTYL2k/u+h53rH2OH4BJLuftzF96jmUcYL7OQMC0Qzv4GucxD2HD908YgOt78Ady5v7+U+swbto
        gSJq3M/5UBd9sRAHEJ5OvpyeRG9eS2fT7+p+PojFrP3S3M85UBldMAO7cFW44dZOuYyaxG3ly3S7AJLk
        GjvEZjFVtqoo93Mmdod+CuPj3bNR6XCAthGqU1F2W4n1CUlwP09AO6aT2WRcjnPPNsHb+ArHcCcdD80U
        oo+tHHVZtUPuMp3sawxm+llh8+7nPKiFV/ApfhXonpWnMj1H9HSYj01/soTHu5/7oo4x43JmphWPw4+4
        kq5OeUrOoBxhqF7nswsgybh8lc3mODarmXm2/IYIRpiPDcE3xJ25LFsesX4hYVjEZjeAvtyNYGqE73V9
        ONHn5wSFgTlTLrEZzuc5JOorpd46cdb0VsQCmOxH059gEfkKpd0NRDn84KNdPkxEAudmF8RYv5PNaXWi
        QHzrs939kjCW1kCoHy6AWDbbgSmdOTN9uLNBxAHQwycPPR6Z6Zqp0ElZPJwMI2l94s4zz0+nP86L0Clp
        GApjtw93dC8KeFwABbHPbxdALJv1xDS5vj69DVK5QI0Uhac6xXPQJyEjZ7NPd7IbsQAG+PH0x8kPbPbZ
        HfmaD3fxEpEQngnL/HwBXENLJ8TDi5QthH+8BI4Kt8IfRzCGoDdexVisdJzROQbj4bPmnwSZSBwATwp2
        cJ/AQJR2ccdmRkWMxHlHjc9G4KziJlzEr8KefQ9PEwtglNB+rUN1D4rnLkf5SZWHeUxEScwXFFL6p3ur
        dzyy43uBvVpCVCKpil8cZA1Q7PMPRZ34FPFXcUHA01cTdTkq4JxAzaMY6XRviStpfhPFPgL51/FoKI7w
        W/Qg7akpttv+9KHEJHQUlq4WiiZe4y4mpLipxOUGd0A7dGVK2VapcdaRIIshit+AnnIZlGKYZWtZmJt4
        nJiCacJ6NZUjhasCTsb/bzjmoHaKSJ3caI0VQsrjuA8SwW8KF8CmVLG6WdHLxqvSHyk9XqkiHncI+/5r
        cwXexS3AU3jBbeJnDjYOF6TMwG9gm7A6K93LbjrfwDbLZDAREVtLWNjbGs6UrZbYi+bE3/8tJTYrOK4y
        lqrU7d9R1G3XA9nXYT1QOwb9iOHtJUz5HcwddV3Fy3+8IXxmIuO8ATWVmSZGEHHJ3dn2aO3pV1GXyGn8
        TJjloa1tyTh5sF7wDJyPy5fKhY1Kpv8cuw9TqMO6b+Ur3UWUYntImOYTxg4X+9BZcMDqxoRK5+OVLIBP
        vOasFMIkC1eiGcSTmwq7al1AWRsXQDHBSWvjE17zL2mXjmS5TipAyf66LiYdNlHsl54xSOC+VsrWIjtL
        BM7BXTbz8SiZeCeVKWu4SyTWwFoTR8FFVCY0jBXC+vUXu+HbiTEC5+Akm/nEAVkpefoj2OlmpOLQOMOR
        OxvZXdoTSuKEQA97PVsXwOsCZ2FlsgFqsPRotEIGK5F0MFjHdxzxNJFHXiS7v9sJkaUrXC6sj0mu8zHQ
        xFBUYSs22ujp5hZild53bF0Aw4W1M5zNOpLjgn+XOP0niVxdCnnZcPDRRpxIOt3cmlnFXntDbK3Z86lA
        M1xh1y32c4kL4CML5Srac93gVxCJ0JWZgiiyd0dQ3MZKTOIC9j9LeQ3vLS0uIIxI1OBBBXzt9R2DiN93
        EewAp6OQjKExSYdnzVDeO+WrakurCRBimTxlqJc33EBT4tczJJi47KroOUngZ1g79fm6U8r037H8fTzk
        tajjb+x/PG+quxyr46Td68RdV3fGZQSkxHQpC2Br2hcbxH+8+sgWEEbmujaxj9Hb69u2lOf6UGAbp6d9
        YScJwWHRpIuWr07hN16Hvxfx+35SlvkeL+R0PGgl8FCOSk4MTUZFCW7hg0TFfj608FqzjPLHZZAU/nIf
        /S32sxR+EuoGruguTHq98IEZZ9k54j2dewdREi0Qf0hSdfd5iQv2dv1bIrR16917YkYLHpSLRLlWPlTn
        iJSbRvz+cdyUZu0YbrqXuTFb8KXcA3dSG8FJIgss28i8L9FIdLRwgbRTzpoMDSnArpFiS+575E4qgWMC
        XxtO1uriQXEc4PDHe3bHZsFqqR6PEBOsgKWxTLhJziN3kth06XWEg5YPvTm+jO8JoqXS+FPqArhH3kfc
        oZlQ1S9JCO6ktwS+drFFMrQ8XOHio8hAa9mkFifxiAFX19uSiKsGULZncSVTorDSSxgojX9xFLK6gyeJ
        J0xUEPm4ioslOABN8I2kJD2SO6kQ9gt9+SF0MKkIZsYXHM8/SjIDblGwAKIx1mvwa3lMxmVpLaK4k9hK
        nC98/Y03RW7yqJt8WkOnG6opqoJ8nWQsL41hQlXvtDKPdlX1FJ6iHIO1JuwBk62ebuimjM/sFBq6/dgq
        M43liPQdqSc90DWlbEbH0cUQG2YZ9gueb60R8YzZiqY/Tn5iPXBFLjyOWUoqBl329vHlFpCl794q8KGB
        wNABXHfjfShImFf2KlwAccrgQ4lX7UoIwkZlLCzbvdNOTpHWmPVE9p4rCnLejuc6mhlwPmqgO0JwTmlN
        lineh1smgcIpvMRBY9KR6/4ejR7EM4IUT3/cNThUOasqzZ2UiHJSz6bbmE6UcYhDNrZ98jwplH1hnr2I
        6Z8Z0A45wxOrlNVryIXdshkNiPY8xhkYSTEDFsNhPf2guZOkJCN49pz19hAqGsDN6z2ZjK65raef30X9
        hILhusMmurjbKP6zNpxuw/Xkwxt3kgM2zO1uwrmH2XC6ZZN+qDlTDvNGKWUUHJDkWS7gtRTu3CLcZWTX
        EadbOb9hBqRlCb8f5nVljbzH7svJeX09uD1kwxxysXWyBPGbXhsoNZvsRotEg+kGzl/cIk+3KXryQXMn
        Oc5wGoq32Jb+BHcI52EPBecSjNvb9PSD5k5ymOskIbgzGGu5/5tiBqwp0dfuZJltzP3aTbnZMtaAzTxI
        qYM7PQjNneSg8Am7Tzd/ZgZ0FYo7yUEBVOZkD3G6iQ5ySy9CcSc5KITS/tOtsV8zAybLRONRePKDqM2e
        bl2JXrylJz/eumKidlkZyWkUZuUvIthcMwMmCMWd5JhEKvPOZIoZ8JieftDcSQ5JpTQvE4getFHOieYM
        GWouF0dmMrX50+1pS9nE/iA0dxIBeeUUzMspkhlwvZ5+0NxJJDIo5BPilVXE6VbRYTStqiTYa3Ka4pJK
        VmQI0fpOijkRnSExVgpz1VXKKshzulG0E9P19IPmTuIoVrQr3Z5uskpfOl12cSWoe8QMR6zhuyZON3nF
        b50tM6yVZemi/ByNRH+86qF2Rj+yoEyMnn4v3EkcEF1c3bvsi6+62cwN1asaZsD0JRcI7iQu5FDEKpgs
        7z4w636S6iigTje5FBjOlY2WS3MpYhVMkjOo5JK01hfnXP72MZlQFq6nH9Zrs0INq2CyzEyV8t0IW7lO
        t8F68uGNO4kTIknWvAd7NUnTnqJMr70df7pVIkpKrdTTD5o7yUB9rhXKOrDSbdnHLOiJ89hEnG6lFFBh
        OlFWcFRf4MAgRc2/h+c9tqkhmQzaLp1EM4mWQbAFTRVVtNlpLJXBBe9LC0e77+Dpp7mTDEAc2TrtxHjD
        9NV1k4TTdQGC0JlJP0zHbqWKsiehuJMMuoUXKGj+MTNxbPGoIth4dR7DUTbF7SQ/O6y2O24BLDDvBk6N
        XgrMqh+abu1/hG7MOzxUIyyCuY46EGIM1yonUEu6Y+WyBSfmTIHt2kIUosgtkOjVuISZJKxwizxuLPFi
        ZbHpC4xIutXDRCWyhNoqO90YY8KVhKbusFiePxWmSW38LbQ13dJHhTED3iFTUJLSaW667GJfMUWxDdPF
        W6MPFuK01DGcBlvR0Stdo53yg/eCph7RX1ir1nLk12VPzKa4i0Wol2IXy4BKGMdBemWXE72jvQugQgo3
        jOjb9Sum25lRWCBrhDuyRTd4AVHs2+/noWZRQ0m3BYo7yRSy4XtpC+B3C5x7RXBQUKsOEVVIXFEcm0iG
        gPL4UcIYUtxJJjFK2gIYaaGVLZj+IKZVizhv1ZnYPYH+z0YSgmxGwXY8KUmXPW+0lEEKvCusXUNtHMtx
        gseQ5k4yiRI4KmUBfGLBfpUVa4TpJS/aOJaVBWtURy1zNLvd2pZKmP7rZvPYBKe0R9gRWuEyliFCR3Gp
        IT4WbgyQsADWmmDbTMYzwkpCRniiWzUJsYUrBkAIGgkvtxJhMYh5ksB79bO2jmV7gdVLae4kCyiIfYIX
        wM8GeITSIteDeEERrpXeto5lU2G3FZo7yRICMFfwAhhoqX1iS9uNt3UsmwhcAHNpZkAr6CG06OJJHkIT
        At2Ftm65rYpVO2FHAM2dZBE1ECpwiKdabN0cobvTIRSxcSTF1WMP9eKxtASRhZfvEiGgPBBd4PoWL98G
        V4zV58Lauc2CI40DkwUO8QGmaZs3AjXgJJcyL+/baFQTRxk7GUIhlnzhH4w2nc0unuRij6U7SkpdSlTO
        NRczoBWIpl+JxmpUN+UGFk9zcxfP2DKG+QTWYT5jUZHmsLavEz7QR9CJn93mQTCWDB7uZeYKLqZCH4HB
        Nev4mAGtYJiEgb6BDwwaM+RQ3f1tQ6pFFaFLdRiEo5VAE4ar5e1b1DbQqhGSYhWCLWbb5cXydHJT8Yii
        7EYsZ7BPoCun8SUbWy5y2vSPpSHOynR0kcYq3qglS5BJxHwLU+MLxHhDeU5+UXtO2VwmRy4zhgtOWv3S
        sO5kCnKp2Ddx0J11kBizHGEyZDU7xgjPIAyCFNSXzCp4Gj296LZTpbbnsImI28KYJXyRGmIGtIL82CM5
        y+UOJhDKV27piZnzDV626kiJqd7DZkYSZkke8FhsIMKcH5HODHjHgMctB3rhlJRWzYI0dJWeBzuTaM3L
        CpgBT3CmXtZFiKRqJfc5EtdsQ1UPlTvFySBlbmDPqRfeyi+UwlhpqWA0d5LtyInNUgc7hljdOQUGgtHy
        EWEYLsGW7EGprdlsnBnQCiZI7VwkQQwTKMUL4N459JrbwLkKGIY/pJfUmACpeFpqHa47aO2xJWUlGoFS
        y2W0T7UbNWPaigq6PZo7SQBKS9JsE+Q2YYCtoJQY5jgaJlr5KiOI3VVU8ZSeMl1RySSyYJXUzfYpjy0p
        qZjgci9bnD2xDOeUlqdfZYuj2hCGSOzefXQgYgFV00PfcEBxqCGQjuZSWQX7EC4WXReY5k4ShEAckNjF
        sURLRvn9AjhglhnQWmhzsMQuUuUZWqYDhlOxstC+kpBG0Fei2rMLeQnn1A6/nv4YNhNKUEciq+Alsm7I
        m35NEHWVzYQSyGQVvI9uZEzwfj9eABaZAa3gY6k+eCrntZsj63XLkY+hDJ0lsgoexcNkWOhcP53+KDYL
        ylBJorszijwE4o6BTX65ACjuJOHIjg0Su+qtflBFgbnLzpUNlqoqWcZYqSZXbzH55bHa7+4DY6EUbaUq
        XyFegzELYIz0CEGVctdCXXVb8DCOS+xuONp5bVEAmuALiRYKtXKcVI0lILPQXLe0soUraTQLGuJ97ESY
        zx8Iy+1hBrSCgVI7HI33uFuWF7XQCwtxwId5hAdCOWSzCoaipUGnVSCa4R18jZM+Zyy64YZaVzrkswru
        QVlTMUylmAYxHptw0dF0j0bkV7uYAa0gQAGr4EoLtTBzoDK6YAZ2+YCi+Km4kpBG8IoCVWu+ZU6sfKiL
        V9l94ZCUghdi3MCvwBF4BFekdz4ac2zxgWVEUaZTvIe1OC20/pkIucJG3hHII4UFJ+36X2RjPYysKINn
        MIldMy+lGw3hR3uZAa3gI0VDsNFOdsx45EI1dMNspmhec/wC+AiOwfNSWQVTWsK6CYmIL4AGeBNLcVRK
        9TEzEmmxtK6tkMkqmFpus1tINUH9yoTiaI2R+BZnlS1xT3IW5Z2zALLhO6WDcQrD2C0/QGD/yqMDpmI7
        LiuoReBevrOfGdAKRiofkN1MiRMdHJ0bNfEy23H2S7Z+upORcBSaK7O338NJrMIQtECgJLNIAAqhKQZi
        OdNAVBmXw1XkAtFmFdmx+fdxET/gfbRnm38WJX3OjIfRFmOxAeclxkYmXQHzwWGQF5v/N9vuZ6ILqiCH
        I3qeHRXRGf8n0f0cgzfgOBQXHpt/CwcRjH541HmrP9H9XBu9sRB/CE9V22eBXlsgugs6ESPwJ9YyPb8l
        iqjJgTPsfm7OdJLV7G4iporKXS/x0Qovg/bG5kfjErZiEtPuyyg65a0gC0oz/eQDbMZfNhuX5zrrApjy
        GNhoSxevYS/msB2lmunCzM5BTlTFi/h//GyTcXmDM7f/JFS0VLTtNo4iBEGojwLwNeRnveqPxThsybi8
        lY2ww1GG3Y+NWssicQbfYSSeYHtIJvgyMrLvtxXTZ9axHkcYPhJXsNFNB8iH4ZyVRKNxGdsxFc+jnHPP
        NSHIynr8LD7ENoRyfi6XMMKhtx+3qI/PyTCR6+zSOB89UVMszaHjkRvV2Sh8gl/IAnNh7PrbIL11LTPq
        YVy8+yTS5Yu/iWPsiBiAxijkjHg2RyCA6TyN2KgsYzrQTZcdIZKN3g42ivXUR/+bRR7UYFvd6+xQGI3B
        eAmPsVM+s55xD4hzPz/GRmkwG63hTBl+lo1eXj0sGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoa
        GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGn6N/wE1slmZZD25HAAAAABJRU5ErkJggg==
</value>
  </data>
</root>